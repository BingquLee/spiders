if (self.CavalryLogger) { CavalryLogger.start_js(["XSvGq"]); }

__d("VideoComposerCaptionsTabConfig",["ix","fbt","Promise","VideoComposerCaptionEditorMasterContainer.react","VideoComposerDialogCaptionEditorUtils","VideoComposerCaptionsStore","VideoComposerCaptionsTabContainer.react","VideoComposerDialogTab","asset"],(function(a,b,c,d,e,f,g,h){"use strict";__p&&__p();a={key:b("VideoComposerDialogTab").CAPTIONS,glyphSelected:g("401199"),glyphUnselected:g("401202"),title:h._("\u5b57\u5e55 (CC)"),defaultDescription:h._("\u4e3a\u89c6\u9891\u6dfb\u52a0\u591a\u8bed\u8a00\u5b57\u5e55\u3002"),tabContainer:b("VideoComposerCaptionsTabContainer.react"),bodyContainer:b("VideoComposerCaptionEditorMasterContainer.react"),getCrosspostRequestDataToSend:function(){return b("VideoComposerCaptionsStore").getCrosspostPostData()},getEditRequestDataToSend:function(){return b("VideoComposerCaptionsStore").getPostDataForEdit()},getPostRequestDataToSend:function(){return b("VideoComposerCaptionsStore").getPostRequestDataToSend()},fetchCrosspostData:function(a){if(a.common.showCaptionsTab)return b("VideoComposerDialogCaptionEditorUtils").fetchCrosspostData(a);else return b("Promise").resolve()},fetchEditPostData:function(a){return a.common.showCaptionsTab?b("VideoComposerDialogCaptionEditorUtils").fetchEditData(a):b("Promise").resolve()}};e.exports=a}),null);